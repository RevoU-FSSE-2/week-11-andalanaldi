openapi: 3.0.0
info:
  title: 'Recipe Book API'
  version: 1.0.0
  description: 'API for managing recipe books with RBAC'
servers:
  - url: http://localhost:3000
    description: 'Development server'
components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 'Bearer with JWT token'
  schemas:
    RegisterUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          minLength: 8
        role:
          type: string
      required:
        - "username"
        - "password"
    LoginUser:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    BadRequest:
      type: object
      properties:
        error:
          type: string
    InternalServerError:
      type: object
      properties:
        error:
          type: string
    RecipeNotFound:
      type: object
      properties:
        error:
          type: string
    IncorrectUserPass:
      type: object
      properties:
        error:
          type: string
    Recipe:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        name:
          type: string
        ingredients:
          type: string
        instructions:
          type: string
paths:
  /auth/register:
    post:
      summary: Register new user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      role:
                        type: string
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'  
  /auth/login:
    post:
      summary: 'Login user'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: 'Login Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: string
        '400':
          description: 'Bad Request'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '401':
          description: 'Username not found / Password is incorrect'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncorrectUserPass'
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'  
  /recipe/recipes:
    get:
      security:
        - bearer: []
      summary: 'Get all recipes'
      responses:
        '200':
          description: 'Get all recipes'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Recipe'
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'              
    post:
      security:
        - bearer: []
      summary: 'Create a new recipe'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '201':
          description: 'Recipe created successfully'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Recipe'
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
  /recipe/recipes/{id}:
    get:
      security:
        - bearer: []
      summary: 'Get a recipe by ID'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 'ID of the recipe to retrieve'
      responses:
        '200':
          description: 'Get recipe by ID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        '404':
          description: 'Recipe not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeNotFound'
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    put:
      security:
        - bearer: []
      summary: 'Update a recipe by ID'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 'ID of the recipe to update'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        '200':
          description: 'Recipe updated successfully'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Recipe'
        '400':
          description: 'No fields to update'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'
        '404':
          description: 'Recipe not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeNotFound'
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      security:
        - bearer: []
      summary: 'Delete a recipe by ID'
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: 'ID of the recipe to delete'
      responses:
        '200':
          description: 'Recipe deleted successfully'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Recipe'
        '404':
          description: 'Recipe not found'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeNotFound'
        '500':
          description: 'Internal server error'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
